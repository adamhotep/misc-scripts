#!/bin/sh
# Install in /usr/local/bin/vimdiff with a symlink named /usr/local/bin/gvimdiff
# (or anywhere in your path before [g]vimdiff or in place of their symlinks).

help() {
  self=${0##*/}
  cat <</help
Drop-in wrapper for [g]vimdiff supporting blank views and .snapshot copies
Usage: $self [VIM_OPTIONS] [file [file2]]

See \`${self%diff} --help\` or \`man $self\` for help with VIM_OPTIONS

Snapshot navigation is experimental. It expects a local .snapshot dir such
that given foo/bar.txt, there are files like foo/.snapshot/hourly.0/bar.txt
but it is currently completely untested as I don't use NetApps any more.

vimdiff+snapshot 2.0.20240707.0 copyright 2009+ by Adam Katz <@adamhotep>, GPLv3
/help
  exit
}

# Version 1.x (`vimdiff+cvs`) could also automatically traverse CVS & Subversion
# repositories, but that functionality has been removed in favor of git; put
# `vimdiff = difftool -y -t vimdiff` in the `[alias]` section of ~/.gitconfig
# (and the same for `gvimdiff`) and then run `git vimdiff bar.txt`

s="${SNAPSHOT_DIR:-.snapshot}"

# Loop through the arguments, find -h/--help, note the last two files (if any)
last=""
penultimate=""
opt=1
for arg in "$@"; do
  if [ "$opt" = 1 ] && [ "$arg" = -h -o "$arg" = --help ]; then help; fi
  if [ "$arg" = "${arg#-}" ] || [ "$arg" = -- ] || [ -e "$arg" ]; then opt=0; fi
  if [ -e "$last" ]; then penultimate="$last"; fi
  if [ -e "$arg" ]; then last="$arg"; fi
done

# no file arguments: open a diff between two new files
if [ ! -e "$last" ]; then
  set -- "$@" +'vsp|enew|diffthis'

# Just one file and its parent directory has a snapshot subdirectory
elif [ -z "$penultimate" ] && [ -e "$last" ] && [ -d "${1%*/}/$s" ]; then
  # Snapshot support {{{
  file="$1"
  old="$(
    # loop through each snapshot from newest to oldest until you have a change.
    # yes, this fails if you have a linebreak in your filenames--stop that.
    find "${file%*/}/$s" -maxdepth 2 -name "$1" -type f -print0 \
      |xargs -0 ls -td \
      |while IFS= read -r f; do
        if [ -e "$f" ] && [ -s "$f" ] && ! diff -q "$file" "$f" >/dev/null; then
          echo "$f"
          break
        fi
      done
  )"
  if [ -s "$old" ]; then
    set -- "$old" "$@"
  fi
  # end NetApp-style Snapshot support }}}
fi

case "${0##*/}" in
  ( vimdiff* )	exec vim -d "$@" ;;
  ( *vimdiff* )	exec vim -gd "$@" ;;
esac
